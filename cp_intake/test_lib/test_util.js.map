{"version":3,"sources":["../test/test_util.js"],"names":[],"mappings":"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","file":"test_util.js","sourcesContent":["import { expect } from 'chai';\nimport { assert } from 'chai';\nimport { should } from 'chai';\nimport { parse_cp } from '../lib/util';\nimport { ODNS_Mapper } from '../lib/util';\nimport { CP_Parser } from '../lib/util';\nimport { streamToString } from '../lib/util';\nimport { fake_cp } from '../lib/fake_cp';\n\nvar stream = require('stream');\nvar Readable = stream.Readable;\n\ndescribe('util', () => {\n  it(`CP_Parser should transform CP Event to JSON`, () => {\n    let dummy_event = fake_cp();\n    let json_stream = parse_cp(dummy_event);\n\n    streamToString(json_stream, function(str) {\n      expect(JSON.parse(str)).to.not.throw(Error);\n    });\n  });\n\n  it(`CP_Parser should not error with bad data`, () => {\n    var bad_data =\n      `2014-07-14T21:38:52+0000 6Mar2014 14:07:24 redirect$ # ## % % # # @!1 ;;; / ;; 192.168.115.177 <eth1 alert web_client_type: Microsoft IE 8.0; ;;;; /// + 123 resource: http://leiw6.ayid.vnz/za/images/threatwiki/pages/TestAntiBotBlade.html;  ;;; # @ ! $ 5 7 , ; :src: 192.168.35.121; dst: 23.203.225.174; proto: tcp; session_id: {0x5318f19c,0x2,0xb17361d1,0xc0000000}; Protection name: Check Point - Testing Bot; malware_family: Check Point; Source OS: Windows; Confidence Level: 5; severity: 2; malware_action: Communication with C&C site; rule_uid: {49787C9F-D241-4E6B-91B3-402B56026391}; Protection Type: URL reputation; malware_rule_id: {0000000A-00BC-004E-9379-B356E398F290}; protection_id: 00233CFEE; refid: 0; log_id: 2; proxy_src_ip: 192.168.35.121; scope: 192.168.35.121; user: alice smith (alice)(+); src_user_name: alice smith (alice)(+); src_machine_name: xp1@opsec.com; snid: b7e71f09; product: Anti Malware; service: http; s_port: 3370; device_version: This is Check Points software version R77.10 - Build 243;`;\n\n    let json_stream = parse_cp(bad_data);\n\n    streamToString(json_stream, function(str) {\n      var json = {};\n      expect(json = JSON.parse(str)).to.not.throw(Error);\n    });\n  });\n\n  it(`CP_Parser should parse what it can with bad data`, () => {\n    var bad_data =\n      `2014-07-14T21:38:52+0000 6Mar2014 14:07:24 redirect$ # ## % % # # @!1 ;;; / ;; 192.168.115.177 <eth1 alert web_client_type: Microsoft IE 8.0; ;;;; /// + 123 resource: http://leiw6.ayid.vnz/za/images/threatwiki/pages/TestAntiBotBlade.html;  ;;; # @ ! $ 5 7 , ; :src: 192.168.35.121; dst: 23.203.225.174; proto: tcp; session_id: {0x5318f19c,0x2,0xb17361d1,0xc0000000}; Protection name: Check Point - Testing Bot; malware_family: Check Point; Source OS: Windows; Confidence Level: 5; severity: 2; malware_action: Communication with C&C site; rule_uid: {49787C9F-D241-4E6B-91B3-402B56026391}; Protection Type: URL reputation; malware_rule_id: {0000000A-00BC-004E-9379-B356E398F290}; protection_id: 00233CFEE; refid: 0; log_id: 2; proxy_src_ip: 192.168.35.121; scope: 192.168.35.121; user: alice smith (alice)(+); src_user_name: alice smith (alice)(+); src_machine_name: xp1@opsec.com; snid: b7e71f09; product: Anti Malware; service: http; s_port: 3370; device_version: This is Check Points software version R77.10 - Build 243;`;\n\n    let json_stream = parse_cp(bad_data);\n\n    streamToString(json_stream, function(str) {\n      var json = JSON.parse(str);\n      expect(json).to.contain.property('malware_family');\n    });\n  });\n\n  it(`CP_Parser should parse event into intermediate json`, () => {\n    let data =\n      '2014-07-14T21:38:52+0000 6Mar2014 14:07:24 redirect 192.168.115.177 <eth1 alert web_client_type: Microsoft IE 8.0; resource: http://leiw6.ayid.vnz/za/images/threatwiki/pages/TestAntiBotBlade.html; src: 192.168.35.121; dst: 23.203.225.174; proto: tcp; session_id: {0x5318f19c,0x2,0xb17361d1,0xc0000000}; Protection name: Check Point - Testing Bot; malware_family: Check Point; Source OS: Windows; Confidence Level: 5; severity: 2; malware_action: Communication with C&C site; rule_uid: {49787C9F-D241-4E6B-91B3-402B56026391}; Protection Type: URL reputation; malware_rule_id: {0000000A-00BC-004E-9379-B356E398F290}; protection_id: 00233CFEE; refid: 0; log_id: 2; proxy_src_ip: 192.168.35.121; scope: 192.168.35.121; user: alice smith (alice)(+); src_user_name: alice smith (alice)(+); src_machine_name: xp1@opsec.com; snid: b7e71f09; product: Anti Malware; service: http; s_port: 3370; device_version: This is Check Points software version R77.10 - Build 243;';\n\n    let should_match = '{\"event_creation\": \"2014-07-14T21:38:52+0000\",\"date2\": \"6Mar2014\",\"date3\": \"14:07:24\",\"action_type\": \"redirect\",\"checkpoint_server_ip\": \"192.168.115.177\",\"device_desc\": \"<eth1\",\"log_level\": \"alert\",\"web_client_type\": \"Microsoft IE 8.0\",\"resource\": \"http://leiw6.ayid.vnz/za/images/threatwiki/pages/TestAntiBotBlade.html\",\"src\": \"192.168.35.121\",\"dst\": \"23.203.225.174\",\"proto\": \"tcp\",\"session_id\": \"{0x5318f19c,0x2,0xb17361d1,0xc0000000}\",\"Protection name\": \"Check Point - Testing Bot\",\"malware_family\": \"Check Point\",\"Source OS\": \"Windows\",\"Confidence Level\": \"5\",\"severity\": \"2\",\"malware_action\": \"Communication with C&C site\",\"rule_uid\": \"{49787C9F-D241-4E6B-91B3-402B56026391}\",\"Protection Type\": \"URL reputation\",\"malware_rule_id\": \"{0000000A-00BC-004E-9379-B356E398F290}\",\"protection_id\": \"00233CFEE\",\"refid\": \"0\",\"log_id\": \"2\",\"proxy_src_ip\": \"192.168.35.121\",\"scope\": \"192.168.35.121\",\"user\": \"alice smith (alice)(+)\",\"src_user_name\": \"alice smith (alice)(+)\",\"src_machine_name\": \"xp1@opsec.com\",\"snid\": \"b7e71f09\",\"product\": \"Anti Malware\",\"service\": \"http\",\"s_port\": \"3370\",\"device_version\": \"This is Check Points software version R77.10 - Build 243\"}';\n    let readable_stream = new Readable();\n    readable_stream.push(data);\n    readable_stream.push(null);\n    let parser = new CP_Parser();\n\n    streamToString(readable_stream.pipe(parser), function(out_str) {\n      var json = JSON.parse(out_str);\n      expect(out_str).to.equal(should_match);\n    });\n  });\n\n  it(`ODNS_Mapping should parse intermediate json into correct API json`, () => {\n    let data = '{\"event_creation\": \"2014-07-14T21:38:52+0000\",\"date2\": \"6Mar2014\",\"date3\": \"14:07:24\",\"action_type\": \"redirect\",\"checkpoint_server_ip\": \"192.168.115.177\",\"device_desc\": \"<eth1\",\"log_level\": \"alert\",\"web_client_type\": \"Microsoft IE 8.0\",\"resource\": \"http://leiw6.ayid.vnz/za/images/threatwiki/pages/TestAntiBotBlade.html\",\"src\": \"192.168.35.121\",\"dst\": \"23.203.225.174\",\"proto\": \"tcp\",\"session_id\": \"{0x5318f19c,0x2,0xb17361d1,0xc0000000}\",\"Protection name\": \"Check Point - Testing Bot\",\"malware_family\": \"Check Point\",\"Source OS\": \"Windows\",\"Confidence Level\": \"5\",\"severity\": \"2\",\"malware_action\": \"Communication with C&C site\",\"rule_uid\": \"{49787C9F-D241-4E6B-91B3-402B56026391}\",\"Protection Type\": \"URL reputation\",\"malware_rule_id\": \"{0000000A-00BC-004E-9379-B356E398F290}\",\"protection_id\": \"00233CFEE\",\"refid\": \"0\",\"log_id\": \"2\",\"proxy_src_ip\": \"192.168.35.121\",\"scope\": \"192.168.35.121\",\"user\": \"alice smith (alice)(+)\",\"src_user_name\": \"alice smith (alice)(+)\",\"src_machine_name\": \"xp1@opsec.com\",\"snid\": \"b7e71f09\",\"product\": \"Anti Malware\",\"service\": \"http\",\"s_port\": \"3370\",\"device_version\": \"This is Check Points software version R77.10 - Build 243\"}';\n\n    let should_match = '{\"protocolVersion\":\"1.0a\",\"providerName\":\"Security Platform\",\"eventTime\":\"2014-07-14T21:38:52.000Z\",\"alertTime\":\"2016-04-18T00:02:16.464Z\",\"dstUrl\":\"http://leiw6.ayid.vnz/za/images/threatwiki/pages/TestAntiBotBlade.html\",\"dstDomain\":\"leiw6.ayid.vnz\",\"deviceId\":\"192.168.115.177\",\"deviceVersion\":\"This is Check Points software version R77.10 - Build 243\",\"dstIp\":\"23.203.225.174\",\"eventSeverity\":\"2\",\"eventType\":\"URL reputation\",\"eventDescription\":\"Communication with C&C site\",\"eventHash\":\"{0x5318f19c,0x2,0xb17361d1,0xc0000000}\",\"src\":\"192.168.35.121\"}';\n\n    let readable_stream = new Readable();\n    readable_stream.push(data);\n    readable_stream.push(null);\n    let mapper = new ODNS_Mapper();\n\n    streamToString(readable_stream.pipe(mapper), function(out_str) {\n      var json = JSON.parse(out_str);\n      expect(out_str).to.equal(should_match);\n    });\n  });\n\n  it(`streamToString should convert stream to a string`, () => {\n    let str = \"A Test String\";\n    let readable_stream = new Readable();\n    readable_stream.push(str);\n    readable_stream.push(null);\n\n    streamToString(readable_stream, function(out_str) {\n      expect(out_str).to.equal(str);\n    });\n  });\n});\n"]}